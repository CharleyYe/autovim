"""""""""""""""""""""""""""
"nomal setting
"""""""""""""""""""""""""""
set nu  "display the number of every line
set ruler   " show the cursor position all the time
set tabstop=4
set hlsearch
set ignorecase
map bn :bn<CR>
map bp :bp<CR>

"""""""""""""""""""""""""""
"languge
"""""""""""""""""""""""""""
if has("multi_byte") 
    set encoding=utf-8 
    set termencoding=utf-8 
    set formatoptions+=mM 
    set fencs=utf-8,gbk 
    if v:lang =~? '^/(zh/)/|/(ja/)/|/(ko/)' 
        set ambiwidth=double 
    endif 
    if has("win32") 
        source $VIMRUNTIME/delmenu.vim 
        source $VIMRUNTIME/menu.vim 
        language messages zh_CN.utf-8 
    endif 
else 
    echoerr "Sorry, this version of (g)vim was not compiled with +multi_byte" 
endif  " UTF-8 

""""""""""""""""""""""""""""""
" Ctags setting
""""""""""""""""""""""""""""""
set tags=tags; 
set autochdir
"auto creat tags
"map <F4> :call Ctags()<CR>	
"func! Ctags()
"exec "w"
"exec "!ctags -R ."
"endfunc

""""""""""""""""""""""""""""""
" Tlist setting
""""""""""""""""""""""""""""""
let Tlist_Show_One_File=1 
let Tlist_Exit_OnlyWindow=1
map <F2> :call Tlist()<CR>
func! Tlist()
exec "TlistToggle"
endfun

"""""""""""""""""""""""""""
"winwanager
"""""""""""""""""""""""""""
let g:winManagerWindowLayout='FileExplorer' 
nmap wm :WMToggle<cr>

"""""""""""""""""""""""""""
"minibuf
"""""""""""""""""""""""""""
"let g:miniBufExplMapWindowsNavVim=1 
let g:miniBufExplMapWindowNavVim = 1 
let g:miniBufExplMapWindowNavArrows = 1 
let g:miniBufExplMapCTabSwitchBufs = 1 
let g:miniBufExplModSelTarget = 1 
let g:bufExplorerMaxHeight=30
let g:miniBufExplorerMoreThanOne=0

"""""""""""""""""""""""""""
"minibuf
"""""""""""""""""""""""""""
nnoremap <silent> <F3> :Grep<CR>


"""""""""""""""""""""""""""
"grep
"""""""""""""""""""""""""""
nnoremap <silent> <F3> :Grep<CR>


"""""""""""""""""""""""""""
"c\h
"""""""""""""""""""""""""""
nnoremap <silent> <F12> :A<CR>

""""""""""""""""""""""""""""""
" lookupfile setting
""""""""""""""""""""""""""""""
let g:LookupFile_MinPatLength = 2               "最少输入2个字符才开始查找
let g:LookupFile_PreserveLastPattern = 0        "不保存上次查找的字符串
let g:LookupFile_PreservePatternHistory = 1     "保存查找历史
let g:LookupFile_AlwaysAcceptFirst = 1          "回车打开第一个匹配项目
let g:LookupFile_AllowNewFiles = 0              "不允许创建不存在的文件
"if filereadable("./filenametags")                "设置tag文件的名字
"    let g:LookupFile_TagExpr = '"./filenametags"'
"endif

" Search for selected text, forwards or backwards.
vnoremap <silent> * :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy/<C-R><C-R>=substitute(
  \escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>
vnoremap <silent> # :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy?<C-R><C-R>=substitute(
  \escape(@", '?\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>
